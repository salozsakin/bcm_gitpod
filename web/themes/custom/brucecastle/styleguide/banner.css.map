{"version":3,"sources":["webpack:///./components/components-overrides/banner/banner.scss","webpack:///./components/00-base/00-global/00-grid/_breakpoints.scss"],"names":[],"mappings":"AAGA,QACE,iBAAkB,CAClB,4BAA6B,CAC9B,mBAGC,UAAW,CACX,mBAAY,CAAZ,gBAAiB,CAClB,kCAGC,QAAS,CACT,QAAS,CACT,UAAW,CACX,cAAe,CACf,kCAAmC,CACnC,sCAAuC,CACvC,kCAAmC,CACnC,iCAAkC,CAClC,sCAAuC,CACvC,+CAAgD,CACjD,wBAGC,gBAAiB,CACjB,kCAAmC,CACpC,0BAGC,QACE,mCAAoC,CACrC,kCAGC,iBAAkB,CAClB,UAAW,CACX,6BAA8B,CAC/B,CCsBC,0BDlBF,kCACE,qCAAsC,CACtC,kCAAmC,CACnC,sCAAuC,CACvC,iCAAkC,CAClC,gCAAiC,CAClC,wBAGC,6BAA8B,CAC/B","file":"banner.css","sourcesContent":["@import '../../00-base/00-global/00-grid/_breakpoints.scss';\n@import '../../00-base/00-global/_02-breakpoints.scss';\n\n.banner {\n  position: relative;\n  margin-bottom: var(--spacing);\n}\n\n.banner__image img {\n  width: 100%;\n  object-fit: cover;\n}\n\n.banner--primary .banner__content {\n  bottom: 0;\n  margin: 0;\n  width: 100%;\n  max-width: none;\n  padding-top: var(--spacing-smaller);\n  padding-bottom: var(--spacing-smallest);\n  padding-right: var(--spacing-large);\n  padding-left: var(--spacing-large);\n  color: var(--banner-content-text-color);\n  background-color: var(--banner-content-bg-color);\n}\n\n.banner__content__title {\n  font-size: 3.2rem;\n  margin-bottom: var(--spacing-small);\n}\n\n@include medium {\n  .banner {\n    margin-bottom: var(--spacing-larger);\n  }\n\n  .banner--primary .banner__content {\n    position: absolute;\n    width: auto;\n    max-width: calc(100% - 2.4rem);\n  }\n}\n\n@include large {\n  .banner--primary .banner__content {\n    max-width: calc(50% - 56.6rem + 55rem);\n    padding-top: var(--spacing-smaller);\n    padding-bottom: var(--spacing-smallest);\n    padding-right: var(--spacing-mega);\n    padding-left: calc(50% - 56.6rem);\n  }\n\n  .banner__content__title {\n    font-size: var(--font-size-h1);\n  }\n}\n","/* stylelint-disable */\n\n// Breakpoint viewport sizes and media queries.\n//\n// Breakpoints are defined as a map of (name: minimum width), order from small to large:\n//\n//    (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px)\n//\n// The map defined in the `$grid-breakpoints` global variable is used as the `$breakpoints` argument by default.\n\n// Name of the next breakpoint, or null for the last breakpoint.\n//\n//    >> breakpoint-next(sm)\n//    md\n//    >> breakpoint-next(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    md\n//    >> breakpoint-next(sm, $breakpoint-names: (xs sm md lg xl))\n//    md\n@function breakpoint-next($name, $breakpoints: $grid-breakpoints, $breakpoint-names: map-keys($breakpoints)) {\n  $n: index($breakpoint-names, $name);\n  @return if($n != null and $n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);\n}\n\n// Minimum breakpoint width. Null for the smallest (first) breakpoint.\n//\n//    >> breakpoint-min(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    576px\n@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {\n  $min: map-get($breakpoints, $name);\n  @return if($min != 0, $min, null);\n}\n\n// Maximum breakpoint width. Null for the largest (last) breakpoint.\n// The maximum value is calculated as the minimum of the next one less 0.02px\n// to work around the limitations of `min-` and `max-` prefixes and viewports with fractional widths.\n// See https://www.w3.org/TR/mediaqueries-4/#mq-min-max\n// Uses 0.02px rather than 0.01px to work around a current rounding bug in Safari.\n// See https://bugs.webkit.org/show_bug.cgi?id=178261\n//\n//    >> breakpoint-max(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    767.98px\n@function breakpoint-max($name, $breakpoints: $grid-breakpoints) {\n  $next: breakpoint-next($name, $breakpoints);\n  @return if($next, breakpoint-min($next, $breakpoints) - 0.02, null);\n}\n\n// Returns a blank string if smallest breakpoint, otherwise returns the name with a dash in front.\n// Useful for making responsive utilities.\n//\n//    >> breakpoint-infix(xs, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"\"  (Returns a blank string)\n//    >> breakpoint-infix(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"-sm\"\n@function breakpoint-infix($name, $breakpoints: $grid-breakpoints) {\n  @return if(breakpoint-min($name, $breakpoints) == null, \"\", \"-#{$name}\");\n}\n\n// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.\n// Makes the @content apply to the given breakpoint and wider.\n@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  @if $min {\n    @media (min-width: $min) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media of at most the maximum breakpoint width. No query for the largest breakpoint.\n// Makes the @content apply to the given breakpoint and narrower.\n@mixin media-breakpoint-down($name, $breakpoints: $grid-breakpoints) {\n  $max: breakpoint-max($name, $breakpoints);\n  @if $max {\n    @media (max-width: $max) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media that spans multiple breakpoint widths.\n// Makes the @content apply between the min and max breakpoints\n@mixin media-breakpoint-between($lower, $upper, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($lower, $breakpoints);\n  $max: breakpoint-max($upper, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($lower, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($upper, $breakpoints) {\n      @content;\n    }\n  }\n}\n\n// Media between the breakpoint's minimum and maximum widths.\n// No minimum for the smallest breakpoint, and no maximum for the largest one.\n// Makes the @content apply only to the given breakpoint, not viewports any wider or narrower.\n@mixin media-breakpoint-only($name, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  $max: breakpoint-max($name, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($name, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($name, $breakpoints) {\n      @content;\n    }\n  }\n}\n"],"sourceRoot":""}