{"version":3,"sources":["webpack:///./components/02-molecules/card/card.scss","webpack:///./components/00-base/00-global/_01-variables.scss","webpack:///./components/00-base/01-colors/_01-colors-used.scss","webpack:///./components/00-base/01-colors/_00-colors-vars.scss"],"names":[],"mappings":"AAEA,MACE,WAAY,CACZ,iBAAkB,CAClB,oBAAqB,CACrB,oBCmCoB,CDvCtB,YAMI,cAAe,CANnB,gCAWI,4CE8CkC,CF7CnC,eAID,UAAW,CACX,6BEwCoC,CFvCpC,oBCsBoB,CDrBpB,wBGfkB,CHgBlB,YAAa,CACd,YAGC,eAAgB,CADlB,kBAII,oBAAqB,CACrB,aAAc,CACd,iBAAkB,CAClB,kBCqBqB,CDpBrB,uBAAyB,CACzB,YAAa","file":"card.css","sourcesContent":["@import '../../imports';\n\n.card {\n  width: 40rem;\n  position: relative;\n  display: inline-block;\n  margin-bottom: $padding-large;\n  &:hover {\n    cursor: pointer;\n  }\n\n  &:focus-within,\n  &:active {\n    box-shadow: 0 0 0 0.4rem clr(bright-blue);\n  }\n}\n\n.card__content {\n  width: 100%;\n  background-color: clr(wht);\n  padding: $padding-default $padding-small;\n  border: 1px solid $light-grey;\n  border-top: 0;\n}\n\n.card__date {\n  line-height: 1.5;\n\n  .icon {\n    display: inline-block;\n    height: 1.7rem;\n    margin-top: 0.3rem;\n    margin-right: $space-one-half;\n    vertical-align: text-top ;\n    width: 1.7rem;\n  }\n}\n","\n// Paths\n$images: '../images';\n\n// Fonts\n$font-body: 'Open Sans' , sans-serif;\n$font-heading: 'Calibri' , sans-serif;\n$font-bold: 700;\n$font-semibold: 600;\n\n// Font sizes\n// -- Mobile\n$mobile-fonts: (\n  heading--title: 4rem,\n  heading--main: 2.7rem,\n  heading--sub: 2.1rem,\n  heading--small: 1.9rem,\n  heading--xsmall: 1.8rem,\n  heading--tiny: 1.6rem,\n  body-copy: 1.6rem,\n  body-small: 1.4rem,\n  body-xs: 1.2rem\n);\n\n// -- Desktop\n$desktop-fonts: (\n  heading--title: 4.6rem,\n  heading--main: 2.7rem,\n  heading--sub: 2.1rem,\n  heading--small: 1.9rem,\n  heading--xsmall: 1.8rem,\n  heading--tiny: 1.6rem,\n  body-copy: 1.6rem,\n  body-small: 1.4rem,\n  body-xs: 1.2rem\n);\n\n// Spacing\n$space: 1rem;\n$padding-default: 1.6rem;\n$padding-medium: 2.4rem;\n$padding-large: 3.2rem;\n$padding-small: 0.8rem;\n\n// Times\n$space-double: $space * 2;\n$space-triple: $space * 3;\n$space-quadruple: $space * 4;\n$space-quintuple: $space * 5;\n$space-sextuple: $space * 6;\n$space-septuple: $space * 7;\n\n// Divided\n$space-one-half: $space/2;\n$space-one-third: $space/3;\n$space-one-fourth: $space/4;\n$space-one-fifth: $space/5;\n$space-one-sixth: $space/6;\n$space-one-seventh: $space/7;\n$space-one-eighth: $space/8;\n\n// Borders, box shadows, etc\n$border-radius: 0.2rem;\n$box-shadow-default: 0 0.4rem 0.8rem 0 rgba(0,0,0,0.15);\n$button-shadow-down: 0 0.2rem 0.5rem rgba(18, 41, 64, 0.2);\n$button-border-default: 0.1rem solid;\n\n// Breakpoints\n$phone: 0;\n$phone-wide: 480px;\n$phablet: 540px;\n$tablet-small: 640px;\n$tablet: 768px;\n$tablet-wide: 1024px;\n$desktop:  1200px;\n$desktop-wide: 1400px;\n\n\n// Grid Variables\n$grid-columns: 12;\n$page-content: 980px;\n\n$grid-breakpoints: (\n  xs: $phone,\n  sm: $phone-wide,\n  sm-md: $phablet,\n  sm-lg: $tablet-small,\n  md: $tablet,\n  lg: $tablet-wide,\n  xl: $desktop,\n  xxl: $desktop-wide,\n);\n\n\n// Define the gutters between columns, for different screen sizes.\n$grid-gutter-widths: (\n  xs: 2rem,\n  sm: 2rem,\n  sm-md: 2rem,\n  sm-lg: 2rem,\n  md: 2rem,\n  lg: 2rem,\n  xl: 2rem,\n  xxl: 2rem,\n);\n\n// Grid containers\n// This is predefined: only need to uncomment if you want to change the default\n//\n// Define the maximum width of `.container` for different screen sizes.\n// By default this is the breakpoint width minus the gutter\n\n// $container-max-widths: (\n//  xs: calc(#{$phone} - #{map-get($grid-gutter-widths, 'xs')}),\n//  sm: calc(#{$phone-wide} - #{map-get($grid-gutter-widths, 'sm')}),\n//  sm-md: calc(#{$phablet} - #{map-get($grid-gutter-widths, 'sm-md')}),\n//  sm-lg: calc(#{$tablet-small} - #{map-get($grid-gutter-widths, 'sm-lg')}),\n//  md: calc(#{$tablet} - #{map-get($grid-gutter-widths, 'md')}),\n//  lg: calc(#{$tablet-wide} - #{map-get($grid-gutter-widths, 'lg')}),\n//  xl: calc(#{$desktop} - #{map-get($grid-gutter-widths, 'xl')}),\n//  xxl: calc(#{$desktop-wide} - #{map-get($grid-gutter-widths, 'xxl')}),\n// );\n\n","@import \"./00-colors-vars\";\n// Color Usage variables - use these (via the `clr` function below)\n// rather than color variables directly.\n$defaultColors: (\n  text: $off-black,\n  text-inverse: $white,\n  background: $white,\n  primary: $brand-primary,\n  secondary: $brand-secondary,\n  tertiary: $brand-tertiary,\n  tint-tertiary: $brand-tertiary-tint,\n  accent: $brand-accent,\n\n  focus: $focus-yellow,\n\n  link-color: $brand-secondary,\n  link-focus-color: $black,\n\n  form-border: $form-border,\n\n  blk: $black,\n  off-black: $off-black,\n  dark-grey: $grey,\n  mid-grey: $grey,\n  light-grey: $light-grey,\n  lightest: $white,\n);\n\n$buttonColors: (\n  button-default-bg: $button-default-bg,\n  button-default-color: $button-default-color,\n  button-default-hover-bg: $button-default-hover-bg,\n  button-default-hover-color: $button-default-hover-color,\n  button-default-outline: $button-default-outline,\n  button-default-active-color: $button-default-active-color,\n  button-default-active-bg: $button-default-active-bg,\n\n  button-secondary-bg: $button-secondary-bg,\n  button-secondary-color: $button-secondary-color,\n  button-secondary-focus-bg: $button-secondary-focus-bg,\n  button-secondary-focus-color: $button-secondary-focus-color,\n  button-secondary-outline: $button-secondary-outline,\n  button-secondary-active-color: $button-secondary-active-color,\n);\n\n///////////\n// Usage //\n///////////\n// This color function makes it easy for you to call a color by it's functional\n// name anywhere you need.\n// E.g. to use the `text` color, you type: `color: clr(text);`\n//\n// How it works:\n// This function works in conjunction with the dynamic css custom properties\n// declarations below. The item called in the function is prefixed with\n// `var(--c-` to call the custom property for that color.\n// E.g. `color: clr(text);` will return `color: var(--c-text);`\n// Note: (The `--c-` is added via the `@each` loops below)\n@function clr($colorChoice) {\n  @return var(--c-#{$colorChoice});\n}\n\n@function btnclr($colorChoice) {\n  @return var(--b-#{$colorChoice});\n}\n\n// Create CSS custom properties\n// This is what powers the built-in OS light/dark mode switching.\n// For each color variable above (e.g. `text` and `background`) a css custom\n// property will be created. (e.g. `--c-text:` and `--c-background:`).\n//\n// The first `@each` below will create a custom property for each item in the\n// `$defaultColors` map. So put all of your default colors there.\n//\n// The `prefers-color-scheme: dark` media query below will then create custom\n// properties for each of the colors in the `$darkColors` map only if the\n// browser supports that feature. If there is an exact match (e.g. `text`) in\n// both maps, the one from `$darkColors` will be used on machines that have\n// opted to use the 'dark mode' on their OS.\n\n","// Color variables - it is better to use the colors in\n// components/00-base/01-colors/_01-colors-used.scss rather than\n// these colors directly.\n$black: #000;\n$off-black: #191919;\n$grey: #949494;\n$light-grey: #DDDEDE;\n$white: #fff;\n$bg-color: #f5f5f0;\n\n// Brand Colours\n$brand-primary: #A4343A;\n$brand-secondary: #006980;\n$brand-tertiary: #493655;\n\n// Secondary brand colours\n$brand-tertiary-tint: rgba($brand-tertiary, 0.2);\n$brand-accent: #B78B20;\n\n// Functional Palette\n$focus-yellow: #FADC4B;\n\n// Misc\n$form-border: $brand-secondary;\n$form-bg: #eee;\n\n\n// Buttons\n//// Primary\n$button-default-bg: $brand-secondary;\n$button-default-color: $white;\n$button-default-hover-bg: $white;\n$button-default-hover-color: $brand-secondary;\n$button-default-outline: $brand-secondary;\n$button-default-active-color: $brand-secondary;\n$button-default-active-bg: $white;\n\n//// Secondary\n$button-secondary-bg: transparent;\n$button-secondary-color: $white;\n$button-secondary-focus-bg: $focus-yellow;\n$button-secondary-focus-color: $black;\n$button-secondary-outline: $black;\n$button-secondary-active-color: $black;\n\n"],"sourceRoot":""}