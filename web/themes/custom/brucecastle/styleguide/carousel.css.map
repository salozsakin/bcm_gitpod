{"version":3,"sources":["webpack:///./components/components-overrides/carousel/carousel.scss","webpack:///./components/00-base/00-global/00-grid/_breakpoints.scss"],"names":[],"mappings":"AAGA,oBACE,iBAAkB,CAClB,4BAA6B,CAF/B,+CAKI,eAAgB,CALpB,iCASI,uBAAwB,CAT5B,gCAaI,eAAgB,CAbpB,mCAgBM,QAAS,CAhBf,uCAoBM,QAAS,CACT,SAAU,CArBhB,+CAwBQ,4BAA6B,CAC7B,aAAc,CACd,YAAa,CACb,sCAAuC,CACvC,UAAW,CACX,SAAU,CACV,oBAAqB,CA9B7B,qDAkCQ,mCAAoC,CAlC5C,6DAuCM,mCAAoC,CAvC1C,wDA2CM,YAAa,CACd,6BAKH,wBAAmC,CAAnC,kCAAmC,CACnC,4BAA6B,CAC7B,mCAAoC,CACpC,kCAAmC,CACnC,mBAAa,CAAb,YAAa,CACb,yBAAsB,CAAtB,qBAAsB,CACtB,qBAAiB,CAAjB,6BAA8B,CAC/B,0BAGC,WAAY,CACZ,+BAAgC,CAChC,eAAgB,CAChB,gBAAiB,CAJnB,+BAOI,aAAc,CACf,0BAKD,oBACE,mCAAoC,CACrC,6BAGC,iBAAkB,CAClB,0BAA2B,CAC3B,KAAM,CACN,mBAAoB,CACpB,gCAAoC,CACpC,iDAAkD,CAClD,iCAAgB,CAAhB,6BAA8B,CAC/B,0BAGC,YAAa,CACd,CC5BC,0BDgCF,0BACE,gBAAiB,CAClB,CClCC,2BDsCF,6BACE,iCAAkC,CAClC,qBAAsB,CACvB,CAGH,gCACE,oBAAqB,CACrB,mBAAoB,CACrB,kBAGC,4BAA6B,CAC7B,WAAY,CACZ,4BAA6B,CAH/B,gDAOI,gCAAoC,CACrC,qDAKD,oBAAqB,CACrB,YAAa,CACb,aAAc,CACf,oDAIC,UAAW,CACX,WAAY,CACb,gBAGC,YAAa","file":"carousel.css","sourcesContent":["@import '../../00-base/00-global/00-grid/_breakpoints.scss';\n@import '../../00-base/00-global/_02-breakpoints.scss';\n\n.home-page-carousel {\n  position: relative;\n  margin-bottom: var(--spacing);\n\n  .slick-slider.slick-dotted {\n    margin-bottom: 0;\n  }\n\n  .slick-arrow {\n    display: none !important;\n  }\n\n  .slick-dots {\n    position: static;\n\n    li {\n      margin: 0;\n    }\n\n    button {\n      margin: 0;\n      padding: 0;\n\n      &::before {\n        background-color: transparent;\n        height: 0.6rem;\n        width: 0.6rem;\n        border: 0.1rem solid var(--color-white);\n        content: \"\";\n        opacity: 1;\n        display: inline-block;\n      }\n\n      &:focus::before {\n        background-color: var(--color-white);\n      }\n    }\n\n    .slick-active button::before {\n      background-color: var(--color-white);\n    }\n\n    .slick-dot-icon::before {\n      content: none;\n    }\n  }\n}\n\n.home-page-carousel__content {\n  background-color: var(--c-tertiary);\n  padding: var(--spacing-large);\n  margin-right: var(--spacing-smaller);\n  margin-left: var(--spacing-smaller);\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n}\n\n.home-page-carousel__text {\n  color: white;\n  margin-top: var(--spacing-large);\n  margin-bottom: 0;\n  font-size: 3.2rem;\n\n  span {\n    display: block;\n  }\n}\n\n\n@include medium {\n  .home-page-carousel {\n    margin-bottom: var(--spacing-larger);\n  }\n\n  .home-page-carousel__content {\n    position: absolute;\n    height: calc(100% - 0.6rem);\n    top: 0;\n    left: var(--spacing);\n    background-color: rgba(0, 0, 0, 0.6);\n    padding: var(--spacing-larger) var(--spacing-mega);\n    flex-direction: column-reverse;\n  }\n\n  .home-page-carousel__text {\n    margin-top: 0;\n  }\n}\n\n@include large {\n  .home-page-carousel__text {\n    font-size: 5.6rem;\n  }\n}\n\n@include xl {\n  .home-page-carousel__content {\n    left: calc(50% - 56.6rem - 7.5rem); // Half screen width - Half main content width - Desired displacement\n    padding: 9.5rem 6.5rem;\n  }\n}\n\n.home-page-carousel__custom-nav {\n  display: inline-block;\n  margin-left: -1.2rem;\n}\n\n.button--carousel {\n  background-color: transparent;\n  border: none;\n  padding: var(--spacing-small);\n\n  &:hover,\n  &:focus {\n    background-color: rgba(0, 0, 0, 0.6);\n  }\n}\n\n.button--pause--custom svg,\n.button--play--custom svg {\n  margin-bottom: 0.2rem;\n  width: 1.6rem;\n  height: 1.6rem;\n}\n\n.button--prev--custom svg,\n.button--next--custom svg {\n  width: 2rem;\n  height: 2rem;\n}\n\n.button--hidden {\n  display: none;\n}\n","/* stylelint-disable */\n\n// Breakpoint viewport sizes and media queries.\n//\n// Breakpoints are defined as a map of (name: minimum width), order from small to large:\n//\n//    (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px)\n//\n// The map defined in the `$grid-breakpoints` global variable is used as the `$breakpoints` argument by default.\n\n// Name of the next breakpoint, or null for the last breakpoint.\n//\n//    >> breakpoint-next(sm)\n//    md\n//    >> breakpoint-next(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    md\n//    >> breakpoint-next(sm, $breakpoint-names: (xs sm md lg xl))\n//    md\n@function breakpoint-next($name, $breakpoints: $grid-breakpoints, $breakpoint-names: map-keys($breakpoints)) {\n  $n: index($breakpoint-names, $name);\n  @return if($n != null and $n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);\n}\n\n// Minimum breakpoint width. Null for the smallest (first) breakpoint.\n//\n//    >> breakpoint-min(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    576px\n@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {\n  $min: map-get($breakpoints, $name);\n  @return if($min != 0, $min, null);\n}\n\n// Maximum breakpoint width. Null for the largest (last) breakpoint.\n// The maximum value is calculated as the minimum of the next one less 0.02px\n// to work around the limitations of `min-` and `max-` prefixes and viewports with fractional widths.\n// See https://www.w3.org/TR/mediaqueries-4/#mq-min-max\n// Uses 0.02px rather than 0.01px to work around a current rounding bug in Safari.\n// See https://bugs.webkit.org/show_bug.cgi?id=178261\n//\n//    >> breakpoint-max(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    767.98px\n@function breakpoint-max($name, $breakpoints: $grid-breakpoints) {\n  $next: breakpoint-next($name, $breakpoints);\n  @return if($next, breakpoint-min($next, $breakpoints) - 0.02, null);\n}\n\n// Returns a blank string if smallest breakpoint, otherwise returns the name with a dash in front.\n// Useful for making responsive utilities.\n//\n//    >> breakpoint-infix(xs, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"\"  (Returns a blank string)\n//    >> breakpoint-infix(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"-sm\"\n@function breakpoint-infix($name, $breakpoints: $grid-breakpoints) {\n  @return if(breakpoint-min($name, $breakpoints) == null, \"\", \"-#{$name}\");\n}\n\n// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.\n// Makes the @content apply to the given breakpoint and wider.\n@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  @if $min {\n    @media (min-width: $min) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media of at most the maximum breakpoint width. No query for the largest breakpoint.\n// Makes the @content apply to the given breakpoint and narrower.\n@mixin media-breakpoint-down($name, $breakpoints: $grid-breakpoints) {\n  $max: breakpoint-max($name, $breakpoints);\n  @if $max {\n    @media (max-width: $max) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media that spans multiple breakpoint widths.\n// Makes the @content apply between the min and max breakpoints\n@mixin media-breakpoint-between($lower, $upper, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($lower, $breakpoints);\n  $max: breakpoint-max($upper, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($lower, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($upper, $breakpoints) {\n      @content;\n    }\n  }\n}\n\n// Media between the breakpoint's minimum and maximum widths.\n// No minimum for the smallest breakpoint, and no maximum for the largest one.\n// Makes the @content apply only to the given breakpoint, not viewports any wider or narrower.\n@mixin media-breakpoint-only($name, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  $max: breakpoint-max($name, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($name, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($name, $breakpoints) {\n      @content;\n    }\n  }\n}\n"],"sourceRoot":""}