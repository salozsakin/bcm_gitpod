{"version":3,"sources":["webpack:///./components/02-molecules/pager/_pager.scss","webpack:///./components/00-base/00-global/_01-variables.scss","webpack:///./components/00-base/01-colors/_01-colors-used.scss"],"names":[],"mappings":"AAEA,OACE,eC0CuB,CDzCvB,UAAW,CACZ,cAGC,cAAe,CACf,UAAW,CAFb,kCAKI,qBC2BoB,CD1BpB,aAAc,CACf,aAID,iCEiDoC,CFhDpC,qBAAsB,CACtB,mBAAa,CAAb,YAAa,CACb,gBAAiB,CAJnB,0BAOI,YAAa,CAPjB,eAWI,oBAAqB,CAXzB,gCAiBI,aAAc,CACd,yBAA0B,CAlB9B,iCAwBI,aE0BkC,CF1BlC,mBE0BkC,CFzBlC,aAAc,CACd,oBAAqB,CA1BzB,mBA8BI,qBEoBkC,CFnBlC,kBCIqB,CDHrB,eCXQ,CDYR,YAAa,CACb,aAAc,CACf,yBAID,wBAAyB","file":"_pager.css","sourcesContent":["@import \"../../imports\";\n\n.pager {\n  margin-top: $space-triple;\n  width: 100%;\n}\n\n.pager__items {\n  padding-left: 0;\n  width: 100%;\n\n  .pager__item__title {\n    padding-bottom: $padding-default;\n    display: block;\n  }\n}\n\n.pager__item {\n  border: 0.1rem solid clr(grey);\n  border-width: 0.1rem 0;\n  display: flex;\n  padding: 2.5rem 0;\n\n  + .pager__item {\n    border-top: 0;\n  }\n\n  a {\n    text-decoration: none;\n  }\n\n  .pager__item__text {\n    @include fntpair(body-2);\n\n    display: block;\n    text-decoration: underline;\n  }\n\n  .pager__item__title {\n    @include fntpair(body-3);\n\n    color: clr(text);\n    display: block;\n    text-decoration: none;\n  }\n\n  .icon {\n    color: clr(cerise);\n    margin-right: $space-one-half;\n    margin-top: $space;\n    width: 1.2rem;\n    height: 1.2rem;\n  }\n}\n\n.pager__item--prev .icon {\n  transform: rotate(180deg);\n}\n","\n// Paths\n$images: '../images';\n\n// Fonts\n$font-body: 'Source Sans Pro', sans-serif;\n$font-heading: 'Montserrat', sans-serif;\n$font-bold: 700;\n$font-semibold: 600;\n\n// Font sizes\n// -- Mobile\n$mobile-fonts: (\n  heading--title: 4rem,\n  heading--main: 3.2rem,\n  heading--sub: 2.6rem,\n  heading--small: 2.4rem,\n  heading--xsmall: 2rem,\n  heading--tiny: 1.8rem,\n  body-copy: 1.8rem,\n  body-small: 1.6rem,\n  body-xs: 1.5rem\n);\n\n// -- Desktop\n$desktop-fonts: (\n  heading--title: 4.8rem,\n  heading--main: 3.6rem,\n  heading--sub: 3rem,\n  heading--small: 2.4rem,\n  heading--xsmall: 2rem,\n  heading--tiny: 1.8rem,\n  body-copy: 1.8rem,\n  body-small: 1.6rem,\n  body-xs: 1.6rem\n);\n\n// Spacing\n$space: 1rem;\n$padding-default: 1.6rem;\n$padding-large: 3.2rem;\n$padding-small: 0.8rem;\n\n// Times\n$space-double: $space * 2;\n$space-triple: $space * 3;\n$space-quadruple: $space * 4;\n$space-quintuple: $space * 5;\n$space-sextuple: $space * 6;\n$space-septuple: $space * 7;\n\n// Divided\n$space-one-half: $space/2;\n$space-one-third: $space/3;\n$space-one-fourth: $space/4;\n$space-one-fifth: $space/5;\n$space-one-sixth: $space/6;\n$space-one-seventh: $space/7;\n$space-one-eighth: $space/8;\n\n// Borders, box shadows, etc\n$border-radius: 0.2rem;\n$box-shadow-default: 0 0.4rem 0.8rem 0 rgba(0,0,0,0.15);\n$button-shadow-down: 0 0.2rem 0.5rem rgba(18, 41, 64, 0.2);\n\n// Breakpoints\n$phone: 0;\n$phone-wide: 480px;\n$phablet: 540px;\n$tablet-small: 640px;\n$tablet: 768px;\n$tablet-wide: 1024px;\n$desktop:  1200px;\n$desktop-wide: 1400px;\n\n\n// Grid Variables\n$grid-columns: 12;\n$page-content: 980px;\n\n$grid-breakpoints: (\n  xs: $phone,\n  sm: $phone-wide,\n  sm-md: $phablet,\n  sm-lg: $tablet-small,\n  md: $tablet,\n  lg: $tablet-wide,\n  xl: $desktop,\n  xxl: $desktop-wide,\n);\n\n\n// Define the gutters between columns, for different screen sizes.\n$grid-gutter-widths: (\n  xs: 2rem,\n  sm: 2rem,\n  sm-md: 2rem,\n  sm-lg: 2rem,\n  md: 2rem,\n  lg: 2rem,\n  xl: 2rem,\n  xxl: 2rem,\n);\n\n// Grid containers\n// This is predefined: only need to uncomment if you want to change the default\n//\n// Define the maximum width of `.container` for different screen sizes.\n// By default this is the breakpoint width minus the gutter\n\n// $container-max-widths: (\n//  xs: calc(#{$phone} - #{map-get($grid-gutter-widths, 'xs')}),\n//  sm: calc(#{$phone-wide} - #{map-get($grid-gutter-widths, 'sm')}),\n//  sm-md: calc(#{$phablet} - #{map-get($grid-gutter-widths, 'sm-md')}),\n//  sm-lg: calc(#{$tablet-small} - #{map-get($grid-gutter-widths, 'sm-lg')}),\n//  md: calc(#{$tablet} - #{map-get($grid-gutter-widths, 'md')}),\n//  lg: calc(#{$tablet-wide} - #{map-get($grid-gutter-widths, 'lg')}),\n//  xl: calc(#{$desktop} - #{map-get($grid-gutter-widths, 'xl')}),\n//  xxl: calc(#{$desktop-wide} - #{map-get($grid-gutter-widths, 'xxl')}),\n// );\n\n","@import \"./00-colors-vars\";\n// Color Usage variables - use these (via the `clr` function below)\n// rather than color variables directly.\n$defaultColors: (\n  text: $black-blue,\n  text-inverse: $white,\n  background: $off-white,\n  primary: $brand-primary,\n  primary-dark: $brand-primary-dark,\n\n  bright-orange: $bright-orange,\n  bright-yellow: $bright-yellow,\n  bright-green-light: $bright-green-light,\n  bright-green: $bright-green,\n  bright-turquoise: $bright-turquoise,\n  bright-blue: $bright-blue,\n  bright-purple: $bright-purple,\n  bright-red: $bright-red,\n\n  link-color: $bright-blue,\n  link-hover-color: $dark-blue,\n  link-visited-color: $bright-purple,\n  link-active-outline: $bright-blue,\n\n  blackest: $black,\n  off-black: $off-black,\n  dark-grey: $dark-grey,\n  mid-grey: $grey,\n  light-grey: $light-grey,\n  lighter-grey: $lighter-grey,\n  off-white: $off-white,\n  lightest: $white,\n  bg-color: $bg-color,\n);\n\n$buttonColors: (\n  button-default-bg: $button-default-bg,\n  button-default-color: $button-default-color,\n  button-default-hover-bg: $button-default-hover-bg,\n  button-default-hover-color: $button-default-hover-color,\n  button-default-outline: $button-default-outline,\n  button-default-active-color: $button-default-active-color,\n  button-default-active-bg: $button-default-active-bg,\n\n  button-secondary-bg: $button-secondary-bg,\n  button-secondary-color: $button-secondary-color,\n  button-secondary-hover-bg: $button-secondary-hover-bg,\n  button-secondary-hover-color: $button-secondary-hover-color,\n  button-secondary-outline: $button-secondary-outline,\n  button-secondary-active-color: $button-secondary-active-color,\n  button-secondary-active-bg: $button-secondary-active-bg,\n);\n\n///////////\n// Usage //\n///////////\n// This color function makes it easy for you to call a color by it's functional\n// name anywhere you need.\n// E.g. to use the `text` color, you type: `color: clr(text);`\n//\n// How it works:\n// This function works in conjunction with the dynamic css custom properties\n// declarations below. The item called in the function is prefixed with\n// `var(--c-` to call the custom property for that color.\n// E.g. `color: clr(text);` will return `color: var(--c-text);`\n// Note: (The `--c-` is added via the `@each` loops below)\n@function clr($colorChoice) {\n  @return var(--c-#{$colorChoice});\n}\n\n@function btnclr($colorChoice) {\n  @return var(--b-#{$colorChoice});\n}\n\n// Create CSS custom properties\n// This is what powers the built-in OS light/dark mode switching.\n// For each color variable above (e.g. `text` and `background`) a css custom\n// property will be created. (e.g. `--c-text:` and `--c-background:`).\n//\n// The first `@each` below will create a custom property for each item in the\n// `$defaultColors` map. So put all of your default colors there.\n//\n// The `prefers-color-scheme: dark` media query below will then create custom\n// properties for each of the colors in the `$darkColors` map only if the\n// browser supports that feature. If there is an exact match (e.g. `text`) in\n// both maps, the one from `$darkColors` will be used on machines that have\n// opted to use the 'dark mode' on their OS.\n\n"],"sourceRoot":""}